// forked from cx20's "Three.js の雲のサンプルを試してみるテスト" http://jsdo.it/cx20/pArs
// forked from Mr.doob's "Clouds" http://www.mrdoob.com/lab/javascript/webgl/clouds/

var container;
var camera, scene, renderer;
var mesh, geometry, material;
var mouseX = 0;
var mouseY = 0;
var start_time = Date.now();
var windowHalfX = window.innerWidth / 2;
var windowHalfY = window.innerHeight / 2;
var group;
var angle = 0;

var DOT_SIZE = 20;
var X_START_POS = -8 * DOT_SIZE;
var Y_START_POS = -8 * DOT_SIZE;
var Z_START_POS = -4.5 * DOT_SIZE;

// http://kyucon.com/qblock/#/63138
// 
var dataSet = [
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","白","白","白","白","白","白","×","×","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","×","×","×","×","×","×",
    "×","×","×","白","白","白","白","白","白","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ],
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","白","白","白","白","白","白","白","×","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","白","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","白","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","白","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","白","×","×","×","×","×",
    "×","×","×","白","白","白","白","白","白","白","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ],
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","白","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","灰","灰","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","灰","×","×","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","灰","×","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","×","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","×","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","白","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","白","×","×",
    "×","×","白","白","白","白","白","白","白","白","×","白","白","×","×","×",
    "×","白","白","白","×","×","×","×","×","×","×","×","白","白","×","×",
    "肌","肌","×","×","×","×","×","×","×","×","×","×","×","肌","肌","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ],
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","白","白","白","×","×","×",
    "×","×","×","×","×","×","×","×","白","白","白","白","白","白","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","黒","白","白","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","白","白","白",
    "白","白","白","白","白","白","白","白","白","白","白","白","白","白","白","白",
    "白","白","白","白","白","白","白","白","白","白","白","白","白","白","×","×",
    "白","白","白","白","白","白","白","白","白","白","白","白","白","×","×","×",
    "白","白","白","白","白","白","白","白","白","白","白","白","白","×","×","×",
    "×","×","白","白","白","白","白","白","白","×","白","白","×","×","×","×",
    "×","×","×","×","×","白","白","白","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ],
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","白","白","白","×","×","×",
    "×","×","×","×","×","×","×","×","白","白","白","白","白","白","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","黒","白","白","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","白","白","白",
    "白","白","白","白","白","白","白","白","白","白","白","白","白","白","白","白",
    "白","白","白","白","白","白","白","白","白","白","白","白","白","白","×","×",
    "白","白","白","白","白","白","白","白","白","白","白","白","白","×","×","×",
    "白","白","白","白","白","白","白","白","白","白","白","白","白","×","×","×",
    "×","×","白","白","白","白","白","白","白","×","白","白","×","×","×","×",
    "×","×","×","×","×","白","白","白","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ],
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","白","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","灰","灰","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","灰","×","×","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","灰","×","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","×","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","×","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","白","×","×",
    "×","白","白","白","白","白","白","白","白","白","白","白","白","白","×","×",
    "×","×","白","白","白","白","白","白","白","白","×","白","白","×","×","×",
    "×","白","白","白","×","×","×","×","×","×","×","×","白","白","×","×",
    "肌","肌","×","×","×","×","×","×","×","×","×","×","×","肌","肌","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ],
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","白","白","白","白","白","白","白","×","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","白","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","白","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","白","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","白","×","×","×","×","×",
    "×","×","×","白","白","白","白","白","白","白","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ],
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","白","白","白","白","白","白","×","×","×","×","×","×","×",
    "×","×","白","白","白","白","白","白","白","白","×","×","×","×","×","×",
    "×","×","×","白","白","白","白","白","白","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ],
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ],
    [
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","赤","赤","赤","×","赤","赤","赤","×","赤","×","赤","赤","赤","×","×",
    "×","赤","×","赤","×","赤","×","赤","×","赤","×","赤","×","×","×","×",
    "×","×","×","赤","×","赤","×","赤","×","赤","×","赤","赤","赤","×","×",
    "×","×","赤","×","×","赤","×","赤","×","赤","×","×","×","赤","×","×",
    "×","赤","赤","赤","×","赤","赤","赤","×","赤","×","赤","赤","赤","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×",
    "×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×"
    ]
];

function getRgbColor( c )
{
	var colorHash = {
		"×":"#000000",
		"黒":"#000000",
		"灰":"#808080",
		"白":"#ffffff",
		"肌":"#ffcccc",
		"茶":"#800000",
		"赤":"#ff0000",
		"黄":"#ffff00",
		"緑":"#00ff00",
		"水":"#00ffff",
		"青":"#0000ff",
		"紫":"#800080"
	};
	return colorHash[ c ];
}

function getRandomColor() {
    var r = Math.floor(Math.random() * 128);
    var g = Math.floor(Math.random() * 128);
    var b = Math.floor(Math.random() * 128);
    return "rgb(" + r + "," + g + "," + b + ")";
}

init();
animate();

function init() {
    if (!Detector.webgl) Detector.addGetWebGLMessage();
    container = document.createElement('div');
    document.body.appendChild(container);
    camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 1000);
    camera.position.x = -100;
    camera.position.y = 250;
    camera.position.z = 500;

    scene = new THREE.Scene();
    geometry = new THREE.Geometry();
    var texture = THREE.ImageUtils.loadTexture('../../assets/A/6/6/7/A667Q.png', null, animate); // cloud10.png
    //var texture = THREE.ImageUtils.loadTexture('cloud10.png', null, animate); // cloud10.png
    texture.magFilter = THREE.LinearMipMapLinearFilter;
    texture.minFilter = THREE.LinearMipMapLinearFilter;
    var fog = new THREE.Fog(0x4584b4, -100, 3000);
    material = new THREE.ShaderMaterial({
        uniforms: {
            "map": {
                type: "t",
                value: texture
            },
            "fogColor": {
                type: "c",
                value: fog.color
            },
            "fogNear": {
                type: "f",
                value: fog.near
            },
            "fogFar": {
                type: "f",
                value: fog.far
            }
        },
        vertexShader: document.getElementById('vs').textContent,
        fragmentShader: document.getElementById('fs').textContent,
        depthWrite: false,
        depthTest: false,
        transparent: true
    });
    var plane = new THREE.Mesh(new THREE.PlaneGeometry(64, 64));
    for (var i = 0; i < 8000; i++) {
        plane.position.x = Math.random() * 1000 - 500;
        plane.position.y = -Math.random() * Math.random() * 200 - 15;
        plane.position.z = i;
        plane.rotation.z = Math.random() * Math.PI;
        plane.scale.x = plane.scale.y = Math.random() * Math.random() * 1.5 + 0.5;
        THREE.GeometryUtils.merge(geometry, plane);
    }
    mesh = new THREE.Mesh(geometry, material);
    scene.add(mesh);
    mesh = new THREE.Mesh(geometry, material);
    mesh.position.z = -8000;
    scene.add(mesh);

    group = new THREE.Object3D();
    group = createSheep(group);
    scene.add(group);

    var light = new THREE.DirectionalLight(0xffffff, 1.5);
    light.position.set(1, 1, 1).normalize();
    scene.add(light);

    var light2 = new THREE.DirectionalLight(0xffffff);
    light2.position.set(-200, -200, 50).normalize();
    scene.add(light2);

    renderer = new THREE.WebGLRenderer({
        antialias: false
    });
    renderer.setClearColor(0x4584b4);

    renderer.setSize(window.innerWidth, window.innerHeight);
    container.appendChild(renderer.domElement);
    document.addEventListener('mousemove', onDocumentMouseMove, false);
    window.addEventListener('resize', onWindowResize, false);

    animate();
}

function createSheep(group) {
    var i, j;
    var x, y, z;
    var color;
    var meshArray = [];
    var geometry = new THREE.CubeGeometry(DOT_SIZE * 0.9, DOT_SIZE * 0.9, DOT_SIZE * 0.9);
    for (j = 0; j < dataSet.length; j++) {
        for (i = 0; i < dataSet[j].length; i++) {
            x = (i % 16) * DOT_SIZE + X_START_POS;
            y = (16 - Math.floor(i / 16)) * DOT_SIZE + Y_START_POS;
            z = j * DOT_SIZE + Z_START_POS;
            color = getRgbColor(dataSet[j][i]);

            if (dataSet[j][i] != "×") {
                var material = new THREE.MeshLambertMaterial({
                    color: color
                });
                meshArray[i] = new THREE.Mesh(geometry, material);
                meshArray[i].position.x = x - 0;
                meshArray[i].position.y = y + 130;
                meshArray[i].position.z = z;
                group.add(meshArray[i]);
            }
        }
    }
    return group;
}

function onDocumentMouseMove(event) {
    mouseX = (event.clientX - windowHalfX) * 0.25;
    mouseY = (event.clientY - windowHalfY) * 0.15;
}

function onWindowResize(event) {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
}

function animate() {
    requestAnimationFrame(animate);
    render();
}

function render() {
    position = ((Date.now() - start_time) * 0.03) % 800;
    camera.position.x += (mouseX - camera.position.x) * 0.01;
    camera.position.y += (-mouseY - camera.position.y) * 0.01;

    // quaternion
    var axis = new THREE.Vector3(0, 1, 0).normalize();
    angle += Math.PI / 180 * 1.0;
    var q = new THREE.Quaternion();
    q.setFromAxisAngle(axis, angle);
    group.quaternion.copy(q);

    renderer.render(scene, camera);
}